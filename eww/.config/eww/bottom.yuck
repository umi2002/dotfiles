(defwindow bottom
  :monitor 0
  :geometry (geometry :x "0px"
                      :y "0px"
                      :width "100%"
                      :height "20px"
                      :anchor "bottom center")
  :stacking "fg"
  (box :class "bottom-bar"
    :orientation "h"
    (box :halign "start"
         :space-evenly false
      (bottom-left)
      (music))
    (box :halign "end"
         :space-evenly false
      (volume-widget)
      (bottom-right))))

(defwidget bottom-left []
  (box :class "left-section"
       :orientation "h"
       :space-evenly false
       :halign "start"
    (box :orientation "h"
      (battery)
      (battery-text))
    (box :orientation "h"
      (separator))
    (box :class "wifi"
         :orientation "h"
      (wifi))))
    
  

(defwidget separator []
  (label :class "separator"
         :text "|"
         :width 30))
    
  

(deflisten battery-status :initial "0" "bash ~/.config/eww/scripts/get-battery-status.sh")

(defpoll battery :interval "1s"
  "bash ~/.config/eww/scripts/get-battery-level.sh")
(defwidget battery []
  (box :class { battery-status == "1" ? "charging" : "discharging"}
       :orientation "h"
    (circular-progress :class "battery-progress"
                       :value battery
                       :start-at 0
                       :thickness 3
                       :clockwise false)))
      
    
  

(defwidget battery-text []
  (label :class "${battery-status == "1" ? "charging" : "discharging"}"
         :text "${battery}%"))
  

(defpoll wifi :interval "1s"
  "bash ~/.config/eww/scripts/get-wifi.sh")
(defwidget wifi []
  (label :text "${wifi}"))

(defwidget music []
  (eventbox :orientation "h"
            :class "music"
      (box :orientation "h"
           :space-evenly false
        (song)
        (prev-song)
        (next-song))))
        
      
    
  
(deflisten song :initial "No song playing" "bash ~/.config/eww/scripts/get-song.sh")

(deflisten play-pause :initial " " "bash ~/.config/eww/scripts/get-play-pause.sh")

(defwidget song []
  (eventbox :onclick "bash ~/.config/eww/scripts/set-play-pause.sh"
    (label :text "${play-pause} ${song} "
           :limit-width 30
           :width 30)))
      
    
  
(defwidget prev-song []
  (eventbox :onclick "playerctl -p chromium previous"
            :halign "end"
    (label :text "󰙣 ")))
    
  

(defwidget next-song []
  (eventbox :onclick "playerctl -p chromium next"
            :halign "end"
    (label :text "󰙡 ")))
    
  

(defwidget volume-widget []
  (eventbox :class "volume-widget"
            :orientation "h"
            :valign "center"
            :onhover `eww update volume-visible=true`
            :onhoverlost `eww update volume-visible=false`
    (box :orientation "h"
         :space-evenly false
      (volume)
      (volume-revealer))))
      

(defwidget volume-revealer []
  (revealer :transition "slideleft"
            :reveal volume-visible
            :duration "100ms"
    (box :class "volume-slider" :valign "center"
      (scale :orientation "h"
             :flipped false
             :value volume
             :min 0
             :max 100
             :onchange "amixer -q -D pulse sset Master {}%"))))
        
      
    
  

(defvar volume-visible false)
(deflisten muted :initial "false"
  "bash ~/.config/eww/scripts/get-mute.sh")

(deflisten volume :initial "0"
  "bash ~/.config/eww/scripts/get-volume.sh")

(defwidget volume []
  (eventbox
    :class "volume-text"
    :width 100
    :onclick "amixer set Master toggle"
    :onmiddleclick "pavucontrol &"
    (label :text {muted == "0" ? "󰝟 ${volume}%" : "󰕾 ${volume}%"})))
    
  
(defwidget bottom-right []
  (box :class "right-section"
       :orientation "h"
       :halign "end"
       :width 80
    (keyboard))) 
  

(defpoll keyboard :interval "1s"
  "bash ~/.config/eww/scripts/get-keyboard.sh")
(defwidget keyboard []
  (label :class "keyboard"
       :text "${keyboard} 󰌌 "))
    
  
